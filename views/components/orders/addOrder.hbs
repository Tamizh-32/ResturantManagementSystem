<!DOCTYPE html>
<html lang="en">
<head>
  <!-- jQuery -->
  <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
  <!-- Choices.js CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css">
  <!-- Your custom styles and scripts -->
  <link rel="stylesheet" href="/css/style.css">
  <script src="/js/validation.js" defer></script>
  <title>Create Order</title>

  <style>
    /* Overall container styling */
    .border-effect {
      border: 1px solid gray; /* Primary blue border */
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow effect */
    }

    /* Header styling */
    .bg-secondary {
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
    }

    /* Order and Reporting sections */
    .border-start-md {
      border-left: 1px solid gray;
    }

    /* Input and form styling */
    .form-control {
      border: 1px solid #ced4da;
      border-radius: 5px;
      transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }

    .form-control:focus {
      border-color: #0d6efd;
      box-shadow: 0 0 5px rgba(13, 110, 253, 0.5);
    }

    /* Buttons */
    .btn-primary {
      box-shadow: 0 3px 6px rgba(0, 123, 255, 0.3);
    }

    .btn-danger {
      box-shadow: 0 3px 6px rgba(220, 53, 69, 0.3);
    }

    /* Row separation */
    .row {
      margin-bottom: 1.5rem;
    }



  </style>
</head>
<body>
  {{> navbar}}
  {{> sidebar}}
  <div class="container mb-3 border-effect">
    <div class="bg-secondary p-2 text-white">
      <h5>Create Order</h5>
    </div>
    <div class="container mt-2 mb-1">
      <form action="/orders" method="POST" class="needs-validation" novalidate>
        <div class="row">
          <div class="col-12 col-md-9 mb-4">
     
            <div class="row mb-1">
              <div class="col-12 col-md-6 mb-1">
                <label for="tableId" class="form-label">Table</label>
                <select name="tableId" class="form-control" required>
                  <option value="">Select Table</option>
                  {{#each tables}}
                    <option value="{{this._id}}">{{this.tableName}}</option>
                  {{/each}}
                </select>
                <span class="text-danger" style="display: none;"></span>
              </div>
              <div class="col-12 col-md-6">
                <label for="customerName" class="form-label">Customer Name</label>
                <input type="text" name="customerName" class="form-control" required>
                <span class="text-danger" style="display: none;"></span>
              </div>
            </div>
            <div class="row mb-1">
              <div class="col-12 col-md-6">
                <label for="customerPhone" class="form-label">Phone</label>
                <input type="text" name="customerPhone" class="form-control" required>
                <span class="text-danger" style="display: none;"></span>
              </div>
              <div class="col-12 col-md-6">
                <label for="email" class="form-label">Email</label>
                <input type="email" name="email" class="form-control">
              </div>
            </div>
            <div id="productRows">
              <div class="row mb-1 product-row">
                <div class="col-12 col-md-5 mb-2">
                  <label for="productId" class="form-label">Item</label>
                  <select name="productId[]" class="form-control productId" required>
                    <option value="">Select Item</option>
                    {{#each products}}
                      <option value="{{this._id}}" data-price="{{this.price}}">{{this.productName}}</option>
                    {{/each}}
                  </select>
                  <span class="text-danger" style="display: none;"></span>
                </div>
                <div class="col-6 col-md-2 mb-2">
                  <label for="qty" class="form-label">Qty</label>
                  <input type="number" name="qty[]" class="form-control qty" value="1" min="1">
                </div>
                <div class="col-6 col-md-2 mb-2">
                  <label for="rate" class="form-label">Rate</label>
                  <input type="text" name="rate[]" class="form-control rate" readonly>
                </div>
                <div class="col-12 col-md-2">
                  <label for="amount" class="form-label">Amount</label>
                  <input type="text" name="amount[]" class="form-control amount" readonly>
                </div>
                <div class="col-12 col-md-1  align-items-end">
                  <label for="amount" class="form-label">Add</label>
                  <button type="button" class="btn btn-primary add-row">+</button>
                </div>
              </div>
            </div>
            <div class="row mb-3">
              <div class="col-12">
                <label for="description" class="form-label">Description</label>
                <textarea name="description" class="form-control"></textarea>
              </div>
            </div>
          </div>
          <div class="col-12 col-md-3 border-start-md">
            <h6 class="mb-3">Reporting Section</h6>
            <div class="row mb-3">
              <div class="col-12 d-flex">
                <label for="grossAmount" class="form-label me-2" style="width: 150px;">Gross Amount</label>
                <input type="text" name="grossAmount" class="form-control" readonly>
              </div>
            </div>
            <div class="row mb-3">
              <div class="col-12 d-flex">
                <label for="taxAmount" class="form-label me-2" style="width: 150px;">Tax %</label>
                <input type="number" name="taxAmount" class="form-control">
              </div>
            </div>
            <div class="row mb-3">
              <div class="col-12 d-flex">
                <label for="discount" class="form-label me-2" style="width: 150px;">Discount</label>
                <input type="number" name="discount" class="form-control">
              </div>
            </div>
            <div class="row mb-3">
              <div class="col-12 d-flex">
                <label for="netAmount" class="form-label me-2" style="width: 150px;">Net Amount</label>
                <input type="text" name="netAmount" class="form-control" readonly>
              </div>
            </div>
            <div class="row mt-4">
              <div class="col-12 text-center">
                <button type="submit" class="btn btn-success">Create Order</button>
                <a href="/orders" class="btn btn-secondary">Cancel</a>
              </div>
            </div>
          </div>
        </div>
      </form>
    </div>
  </div>
  <!-- Choices.js JS -->
  <script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>
  <script>
    $(document).ready(function() {
      // Initialize Choices.js on the product dropdown
      const productDropdowns = document.querySelectorAll('.productId');
      productDropdowns.forEach((dropdown) => {
        new Choices(dropdown, {
          searchEnabled: true,
          placeholder: true,
          removeItemButton: true,
        });
      });

      // Add new row functionality
      $(document).on('click', '.add-row', function() {
        const newRow = `
          <div class="row mb-3 product-row">
            <div class="col-12 col-md-5 mb-2">
              <select name="productId[]" class="form-control productId">
                <option value="">Select Product</option>
                {{#each products}}
                  <option value="{{this._id}}" data-price="{{this.price}}">{{this.productName}}</option>
                {{/each}}
              </select>
            </div>
            <div class="col-6 col-md-2 mb-2">
              <input type="number" name="qty[]" class="form-control qty" value="1" min="1">
            </div>
            <div class="col-6 col-md-2 mb-2">
              <input type="text" name="rate[]" class="form-control rate" readonly>
            </div>
            <div class="col-12 col-md-2">
              <input type="text" name="amount[]" class="form-control amount" readonly>
            </div>
            <div class="col-12 col-md-1  align-items-end">
              <button type="button" class="btn btn-danger remove-row">-</button>
            </div>
          </div>`;
        $('#productRows').append(newRow);

        // Initialize Choices.js on the new dropdown
        const newDropdown = $('#productRows .productId').last()[0];
        new Choices(newDropdown, {
          searchEnabled: true,
          placeholder: true,
          removeItemButton: true,
        });
      });

      // Remove row functionality
      $(document).on('click', '.remove-row', function() {
        $(this).closest('.product-row').remove();
        updateGrossAmount();
        updateNetAmount();
      });

      // Update rate, amount, and gross amount when product or quantity changes
      $(document).on('change', '.productId', function() {
        const row = $(this).closest('.product-row');
        const price = parseFloat($(this).find('option:selected').data('price')) || 0;
        const qty = parseInt(row.find('.qty').val()) || 1;
        const amount = price * qty;
        row.find('.rate').val(price.toFixed(2));
        row.find('.amount').val(amount.toFixed(2));
        updateGrossAmount();
        updateNetAmount();
      });

      $(document).on('input', '.qty', function() {
        const row = $(this).closest('.product-row');
        const price = parseFloat(row.find('.productId option:selected').data('price')) || 0;
        const qty = parseInt($(this).val()) || 1;
        const amount = price * qty;
        row.find('.amount').val(amount.toFixed(2));
        updateGrossAmount();
        updateNetAmount();
      });

      // Function to update gross amount
      function updateGrossAmount() {
        let totalAmount = 0;
        $('.amount').each(function() {
          const amount = parseFloat($(this).val()) || 0;
          totalAmount += amount;
        });
        $('[name="grossAmount"]').val(totalAmount.toFixed(2));
      }

      // Function to update net amount
      function updateNetAmount() {
        const grossAmount = parseFloat($('[name="grossAmount"]').val()) || 0;
        const taxPercent = parseFloat($('[name="taxAmount"]').val()) || 0;
        const discount = parseFloat($('[name="discount"]').val()) || 0;
        const taxAmount = (taxPercent / 100) * grossAmount;
        const totalBeforeDiscount = grossAmount + taxAmount;
        const netAmount = totalBeforeDiscount - discount;
        $('[name="netAmount"]').val(netAmount.toFixed(2));
      }

      // Attach event listeners to input fields
      $(document).on('input', '[name="taxAmount"], [name="discount"], [name="grossAmount"]', updateNetAmount);
    });
  </script>
</body>
</html>